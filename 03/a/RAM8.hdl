// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    
    DMux8Way(in=load, sel=address, a=sw1, b=sw2, c=sw3, d=sw4, e=sw5, f=sw6, g=sw7, h=sw8);
    
    Register(in=in, load=sw1, out[0..15]=out1);
    Register(in=in, load=sw2, out[0..15]=out2);
    Register(in=in, load=sw3, out[0..15]=out3);
    Register(in=in, load=sw4, out[0..15]=out4);
    Register(in=in, load=sw5, out[0..15]=out5);
    Register(in=in, load=sw6, out[0..15]=out6);
    Register(in=in, load=sw7, out[0..15]=out7);
    Register(in=in, load=sw8, out[0..15]=out8);
    
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address, out=out);
    
}